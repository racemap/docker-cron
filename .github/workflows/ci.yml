name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ v* ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Get version
        id: version
        run: |
            if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
              REF="${{ github.ref }}"
              VERSION="${REF#refs/tags/v}"
            else
              VERSION="${{ github.sha }}"
              VERSION="${VERSION:0:7}"
            fi
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Current version: $VERSION"
      
      - name: Run tests
        run: |
          echo "Running tests for version ${{ steps.version.outputs.version }}"

      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck
      
      - name: Run ShellCheck
        run: shellcheck run.sh app/config_parser.sh tests/*.sh
        
      - name: Run test
        run: bash test.sh

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},value=${{ needs.test.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.test.outputs.version }}
            type=semver,pattern={{major}},value=${{ needs.test.outputs.version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ needs.test.outputs.version }}

  release:
    needs: 
      - build
      - test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/tags/v*'
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.test.outputs.version }}
          release_name: Release v${{ needs.test.outputs.version }}
          draft: false
          prerelease: false
